{"version":3,"sources":["../../dist/index.es.js","validation.js","InputText.jsx","InputRadioGroup.jsx","HooksForm.jsx","index.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","push","apply","filter","sym","getOwnPropertyDescriptor","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","_slicedToArray","arr","Array","isArray","_arrayWithHoles","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","err","_iterableToArrayLimit","TypeError","_nonIterableRest","getInputValidationErrors","inputValidations","map","validate","error","useFormValues","initialFormValues","_useState2","react","formValues","setFormValues","resetFormValues","resetInputValue","name","prevFormValues","index_es_resetInputValue","updateInputValue","event","type","checked","setInputValue","input","newValue","nativeEvent","Event","index_es_setInputValue","useFormErrors","formValidations","initialFormErrors","formInputNames","a","getInitialFormErrors","_useState4","formErrors","setFormErrors","numberOfErrors","values","validateForm","inputsToValidate","updatedFormErrors","inputName","index_es_validateForm","validateInputValue","inputValue","hasOwnProperty","errors","prevFormErrors","index_es_validateInputValue","clearFormErrors","clearInputErrors","index_es_clearInputErrors","setInputErrors","required","email","test","alphanumeric","InputText","_ref","label","onChange","onBlur","react_default","createElement","style","margin","htmlFor","id","data-testid","concat","color","padding","listStyle","index","InputRadioGroup","options","marginBottom","marginLeft","option","marginRight","HooksForm","_useFormValues","password","confirmPassword","iLoveHooks","_useFormErrors","min","minLength","value1","value2","passwordsMatch","onSubmit","preventDefault","alert","noValidate","onClick","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.9655fb20.chunk.js","sourcesContent":["import { useState, useMemo } from 'react';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    keys.push.apply(keys, Object.getOwnPropertySymbols(object));\n  }\n\n  if (enumerableOnly) keys = keys.filter(function (sym) {\n    return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n  });\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction setInputValue(input, value, setFormValues) {\n  var name = input;\n  var newValue = value;\n\n  if (input.nativeEvent && input.nativeEvent instanceof Event) {\n    name = input.target.name;\n    var target = input.target;\n    newValue = target.type === 'checkbox' ? target.checked : target.value;\n  }\n\n  setFormValues(function (prevFormValues) {\n    return _objectSpread2({}, prevFormValues, _defineProperty({}, name, newValue));\n  });\n}\n\nfunction updateInputValue(event, setFormValues) {\n  var target = event.target;\n  var name = target.name;\n  var value = target.type === 'checkbox' ? target.checked : target.value;\n  setFormValues(function (prevFormValues) {\n    return _objectSpread2({}, prevFormValues, _defineProperty({}, name, value));\n  });\n}\n\nfunction validateForm(formValues, setFormErrors, formValidations) {\n  var inputsToValidate = Object.keys(formValidations);\n\n  if (inputsToValidate.length === 0) {\n    return true;\n  }\n\n  var updatedFormErrors = {};\n\n  for (var i = 0; i < inputsToValidate.length; i++) {\n    var inputName = inputsToValidate[i];\n    updatedFormErrors[inputName] = getInputValidationErrors(formValues[inputName], formValidations[inputName]);\n  }\n\n  setFormErrors(updatedFormErrors);\n  return Object.values(updatedFormErrors).filter(function (value) {\n    return value.length > 0;\n  }).length === 0;\n}\n\nfunction validateInputValue(input, value, setFormErrors, formValidations) {\n  var inputName = input;\n  var inputValue = value;\n\n  if (input.nativeEvent && input.nativeEvent instanceof Event) {\n    inputName = input.target.name;\n    inputValue = input.target.value;\n  }\n\n  if (!formValidations.hasOwnProperty(inputName)) {\n    return false;\n  }\n\n  var errors = getInputValidationErrors(inputValue, formValidations[inputName]);\n  setFormErrors(function (prevFormErrors) {\n    return _objectSpread2({}, prevFormErrors, _defineProperty({}, inputName, errors));\n  });\n  return errors.length === 0;\n}\n\nfunction resetInputValue(name, setFormValues, initialFormValues) {\n  var value = initialFormValues[name];\n  setFormValues(function (prevFormValues) {\n    return _objectSpread2({}, prevFormValues, _defineProperty({}, name, value));\n  });\n}\n\nfunction clearInputErrors(input, setFormErrors) {\n  var name = typeof input === 'string' ? input : input.target.name;\n  setFormErrors(function (prevFormErrors) {\n    return _objectSpread2({}, prevFormErrors, _defineProperty({}, name, []));\n  });\n}\n\nfunction getInitialFormErrors(formValidations) {\n  var formInputNames = Object.keys(formValidations);\n  var initialFormErrors = {};\n\n  for (var a = 0; a < formInputNames.length; a++) {\n    initialFormErrors[formInputNames[a]] = [];\n  }\n\n  return initialFormErrors;\n}\n\nfunction getInputValidationErrors(value, inputValidations) {\n  var inputValidationErrors = inputValidations.map(function (validate) {\n    return validate(value);\n  }).filter(function (error) {\n    return error !== undefined;\n  });\n  return inputValidationErrors;\n}\n/**\n * @param {Object} initialFormValues\n * Where each key is the form input name,\n * and the value is the initial value of the form input.\n * @example {name: \"initialValue\"}\n * @returns\n * - formValues - Object where each key is the input name and each value is the input value.\n * - resetFormValues - Function that resets the form values to the initial state.\n * - resetInputValue(name) - Function that resets the input value to it's initial state.\n * - updateInputValue - (deprecated) please use `setInputValue` instead.\n * - setInputValue(input, value?) - Function that updates an input value via an event handler or passing the new value.\n * - setFormValues(formValues) - Function that updates the form values.\n */\n\n\nfunction useFormValues(initialFormValues) {\n  var _useState = useState(initialFormValues),\n      _useState2 = _slicedToArray(_useState, 2),\n      formValues = _useState2[0],\n      setFormValues = _useState2[1];\n\n  return {\n    formValues: formValues,\n    resetFormValues: function resetFormValues() {\n      return setFormValues(initialFormValues);\n    },\n\n    /**\n     * @param {String} name\n     */\n    resetInputValue: function resetInputValue$1(name) {\n      return resetInputValue(name, setFormValues, initialFormValues);\n    },\n\n    /**\n     * @deprecated - please use `setInputValue`\n     */\n    updateInputValue: function updateInputValue$1(event) {\n      return updateInputValue(event, setFormValues);\n    },\n\n    /**\n     * @param {String|import('react').SyntheticEvent} input\n     * @param {*=} value\n     */\n    setInputValue: function setInputValue$1(input, value) {\n      return setInputValue(input, value, setFormValues);\n    },\n    setFormValues: setFormValues\n  };\n}\n/**\n * @description Use this hook as an addition to `useFormValues` to help with error handling.\n * @param {Object} formValidations\n * Where each key is the form input name,\n * and the value is an array of validation functions for that form input.\n * @returns\n * - formErrors - Object where each key is the input name and each value is an array of error messages (string/jsx).\n * - numberOfErrors - Number of inputs that have errors.\n * - validateForm - Function that runs validation on the whole form, returns formIsValid (boolean).\n * - validateInputValue(input, value?) - Function that runs validation on an input, returns inputIsValid (boolean).\n * - clearFormErrors - Function that clears the forms errors.\n * - clearInputErrors(input) - Function that clears the errors for an input via an event handler or passing the new value.\n * - setInputErrors(name, errors) - Function that sets the errors for an input.\n */\n\n\nfunction useFormErrors() {\n  var formValidations = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var initialFormErrors = useMemo(function () {\n    return getInitialFormErrors(formValidations);\n  }, [formValidations]);\n\n  var _useState3 = useState(initialFormErrors),\n      _useState4 = _slicedToArray(_useState3, 2),\n      formErrors = _useState4[0],\n      setFormErrors = _useState4[1];\n\n  return {\n    formErrors: formErrors,\n    numberOfErrors: Object.values(formErrors).filter(function (value) {\n      return value.length > 0;\n    }).length,\n    validateForm: function validateForm$1(formValues) {\n      return validateForm(formValues, setFormErrors, formValidations);\n    },\n\n    /**\n     * @param {String|import('react').SyntheticEvent} input\n     * @param {*=} value\n     */\n    validateInputValue: function validateInputValue$1(input) {\n      var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      return validateInputValue(input, value, setFormErrors, formValidations);\n    },\n    clearFormErrors: function clearFormErrors() {\n      return setFormErrors(initialFormErrors);\n    },\n\n    /**\n     * @param {String|import('react').SyntheticEvent} input\n     */\n    clearInputErrors: function clearInputErrors$1(input) {\n      return clearInputErrors(input, setFormErrors);\n    },\n\n    /**\n     * @param {String} name\n     * @param {String[]} errors\n     */\n    setInputErrors: function setInputErrors(name, errors) {\n      return setFormErrors(function (prevFormErrors) {\n        return _objectSpread2({}, prevFormErrors, _defineProperty({}, name, errors));\n      });\n    }\n  };\n}\n\nexport { useFormErrors, useFormValues };","export function required(value) {\n  if (value === null || value === undefined || value === '') {\n    return 'This field is required.'\n  }\n}\n\nexport function email(value) {\n  const errorMessage = 'Please enter a valid email address.'\n  const lengthIsValid = value.length >= 1 && value.length <= 254\n\n  if (!lengthIsValid) {\n    return errorMessage\n  }\n\n  const looksLikeAnEmail = /^.+@.+\\..+$/.test(value)\n  if (!looksLikeAnEmail) {\n    return errorMessage\n  }\n}\n\nexport function minLength(value, min) {\n  if (value.length < min) {\n    return `Please use ${min} or more characters.`\n  }\n}\n\nexport function alphanumeric(value) {\n  if ((/[a-z]/.test(value) && /[0-9]/.test(value)) === false) {\n    return 'Please use letters and numbers.'\n  }\n}\n\nexport function passwordsMatch(value1, value2) {\n  if (value1 !== value2) {\n    return \"Passwords don't match\"\n  }\n}\n","import React from 'react'\nimport { string, func, arrayOf } from 'prop-types'\n\nInputText.propTypes = {\n  name: string.isRequired,\n  label: string.isRequired,\n  type: string.isRequired,\n  value: string,\n  onChange: func.isRequired,\n  onBlur: func,\n  errors: arrayOf(string)\n}\n\nexport default function InputText({\n  name,\n  label,\n  type,\n  value,\n  onChange,\n  onBlur,\n  errors\n}) {\n  return (\n    <div style={{ margin: '20px 0' }}>\n      <label htmlFor={name}>{label}</label>\n      <br />\n      <input\n        id={name}\n        data-testid={name}\n        name={name}\n        type={type}\n        value={value}\n        onChange={onChange}\n        onBlur={onBlur}\n      />\n      <br />\n      {errors && errors.length > 0 && (\n        <ul\n          data-testid={`${name}-errors`}\n          style={{\n            color: 'red',\n            margin: '8px 0',\n            padding: 0,\n            listStyle: 'none'\n          }}\n        >\n          {errors.map((error, index) => (\n            <li key={index}>- {error}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport { string, func, arrayOf, shape } from 'prop-types'\n\nInputRadioGroup.propTypes = {\n  name: string.isRequired,\n  label: string.isRequired,\n  value: string,\n  onChange: func.isRequired,\n  options: arrayOf(\n    shape({ label: string.isRequired, value: string.isRequired })\n  ).isRequired,\n  errors: arrayOf(string)\n}\n\nexport default function InputRadioGroup({\n  name,\n  label,\n  value,\n  onChange,\n  options,\n  errors\n}) {\n  return (\n    <div style={{ margin: '20px 0' }}>\n      <div style={{ marginBottom: '6px' }}>{label}</div>\n      <div style={{ marginLeft: '16px' }}>\n        {options.map(option => {\n          return (\n            <span key={option.value} style={{ marginRight: '6px' }}>\n              <label htmlFor={`${name}-${option.value}`}>{option.label}</label>\n              <input\n                id={`${name}-${option.value}`}\n                name={name}\n                type=\"radio\"\n                value={option.value}\n                checked={option.value === value}\n                onChange={onChange}\n              />\n            </span>\n          )\n        })}\n      </div>\n      {errors && errors.length > 0 && (\n        <ul\n          style={{\n            color: 'red',\n            margin: '8px 0',\n            padding: 0,\n            listStyle: 'none'\n          }}\n        >\n          {errors.map((error, index) => (\n            <li key={index}>- {error}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport { useFormValues, useFormErrors } from '@jasperdunn/react-form-hooks'\nimport {\n  required,\n  email,\n  minLength,\n  alphanumeric,\n  passwordsMatch\n} from './validation'\nimport InputText from './InputText'\nimport InputRadioGroup from './InputRadioGroup'\n\nexport default function HooksForm() {\n  const {\n    formValues,\n    setInputValue,\n    resetFormValues,\n    resetInputValue\n  } = useFormValues({\n    email: '',\n    password: '',\n    confirmPassword: '',\n    iLoveHooks: ''\n  })\n\n  const formValidations = {\n    email: [required, email],\n    password: [required, alphanumeric, value => minLength(value, 6)],\n    confirmPassword: [\n      required,\n      value => passwordsMatch(value, formValues.password)\n    ],\n    iLoveHooks: [required]\n  }\n\n  const {\n    formErrors,\n    numberOfErrors,\n    validateForm,\n    validateInputValue,\n    clearFormErrors,\n    clearInputErrors\n  } = useFormErrors(formValidations)\n\n  function updateAndValidateInput(event) {\n    setInputValue(event)\n    validateInputValue(event)\n  }\n\n  function resetForm() {\n    resetFormValues()\n    clearFormErrors()\n  }\n\n  function submitForm(event) {\n    event.preventDefault()\n\n    const formIsValid = validateForm(formValues)\n    if (formIsValid) {\n      signIn()\n    }\n  }\n\n  function signIn() {\n    //eslint-disable-next-line\n    alert('Validation successful!')\n  }\n\n  return (\n    <form onSubmit={submitForm} noValidate>\n      <h1>Form with hooks</h1>\n      {numberOfErrors > 0 && (\n        <small>\n          {numberOfErrors} field{numberOfErrors !== 1 && 's'} need\n          {numberOfErrors === 1 && 's'} your attention.\n        </small>\n      )}\n      <InputText\n        name=\"email\"\n        label=\"Email - (validate on blur)\"\n        type=\"email\"\n        value={formValues.email}\n        onChange={setInputValue}\n        onBlur={validateInputValue}\n        errors={formErrors.email}\n      />\n      <InputText\n        name=\"password\"\n        label=\"Password - (clear errors on blur)\"\n        type=\"password\"\n        value={formValues.password}\n        onChange={setInputValue}\n        onBlur={clearInputErrors}\n        errors={formErrors.password}\n      />\n      <InputText\n        name=\"confirmPassword\"\n        label=\"Confirm password\"\n        type=\"password\"\n        value={formValues.confirmPassword}\n        onChange={setInputValue}\n        errors={formErrors.confirmPassword}\n      />\n      <InputRadioGroup\n        name=\"iLoveHooks\"\n        label=\"I love hooks!\"\n        value={formValues.iLoveHooks}\n        onChange={updateAndValidateInput}\n        options={[\n          { label: 'Yes', value: 'yes' },\n          { label: 'Yes', value: 'alsoYes' }\n        ]}\n        errors={formErrors.iLoveHooks}\n      />\n      <button type=\"submit\">Create some hooks!</button>\n      <button type=\"button\" onClick={resetForm}>\n        Reset form\n      </button>\n      <button type=\"button\" onClick={() => resetInputValue('email')}>\n        Reset email\n      </button>\n      <button type=\"button\" onClick={() => clearInputErrors('email')}>\n        Clear email errors\n      </button>\n    </form>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport HooksForm from './HooksForm'\n\nfunction App() {\n  return <HooksForm />\n}\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(<App />, rootElement)\n"],"sourceRoot":""}