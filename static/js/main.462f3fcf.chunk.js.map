{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","../../src/logic.ts","../../src/hooks.ts","validation.js","InputText.jsx","InputRadioGroup.jsx","HooksForm.jsx","index.js"],"names":["Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","getFirstInputValidationError","value","inputValidations","a","error","formValues","setFormErrors","formValidations","inputsToValidate","keys","updatedFormErrors","inputName","values","filter","Boolean","input","inputValue","target","name","prevFormErrors","useFormValues","initialFormValues","setFormValues","resetFormValues","resetInputValue","prevFormValues","setInputValue","updatedValue","type","checked","useFormErrors","initialFormErrors","formInputNames","undefined","getInitialFormErrors","formErrors","numberOfErrors","isFormValid","isInputValid","validateForm","validateInputValue","clearFormErrors","clearInputError","setInputError","required","email","test","alphanumeric","InputText","label","onChange","onBlur","style","margin","htmlFor","id","data-testid","color","padding","listStyle","InputRadioGroup","options","marginBottom","marginLeft","map","option","key","marginRight","HooksForm","password","confirmPassword","iLoveHooks","min","minLength","value1","value2","errorMessage","equals","onSubmit","event","preventDefault","alert","noValidate","onClick","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.462f3fcf.chunk.js","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { ChangeEvent, Dispatch, SetStateAction } from 'react'\nimport {\n  InputValue,\n  InputError,\n  FormValidations,\n  InputValidation,\n  FormErrors,\n} from './types'\n\nexport function setInputValue<F>(\n  setFormValues: Dispatch<SetStateAction<F>>,\n  input:\n    | string\n    | ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>,\n  value?: InputValue\n): void {\n  let name: string\n  let updatedValue = value\n\n  if (typeof input === 'string') {\n    name = input\n  } else {\n    const target = input.target\n    name = target.name\n    updatedValue =\n      target.type === 'checkbox'\n        ? (target as HTMLInputElement).checked\n        : target.value\n  }\n\n  setFormValues((prevFormValues: F) => ({\n    ...prevFormValues,\n    [name]: updatedValue,\n  }))\n}\n\nfunction getFirstInputValidationError(\n  value: InputValue,\n  inputValidations: Array<InputValidation>\n): InputError {\n  for (let a = 0; a < inputValidations.length; a++) {\n    const error = inputValidations[a](value)\n    if (error) {\n      return error\n    }\n  }\n\n  return undefined\n}\n\nexport function isFormValid<F, E extends FormErrors>(\n  formValues: F,\n  setFormErrors: Dispatch<SetStateAction<E>>,\n  formValidations: FormValidations\n): boolean {\n  const inputsToValidate = Object.keys(formValidations)\n  if (inputsToValidate.length === 0) {\n    return true\n  }\n\n  const updatedFormErrors = {}\n\n  for (let i = 0; i < inputsToValidate.length; i++) {\n    const inputName = inputsToValidate[i]\n    updatedFormErrors[inputName] = getFirstInputValidationError(\n      formValues[inputName],\n      formValidations[inputName]\n    )\n  }\n\n  setFormErrors(updatedFormErrors as E)\n\n  return (\n    Object.values<InputError>(updatedFormErrors).filter((error: InputError) =>\n      Boolean(error)\n    ).length === 0\n  )\n}\n\nexport function isInputValid<E>(\n  setFormErrors: Dispatch<SetStateAction<E>>,\n  formValidations: FormValidations,\n  input:\n    | string\n    | ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>,\n  value?: InputValue\n): boolean {\n  let inputName: string\n  let inputValue = value\n\n  if (typeof input === 'string') {\n    inputName = input\n  } else {\n    inputName = input.target.name\n    inputValue = input.target.value\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(formValidations, inputName)) {\n    return false\n  }\n\n  const error = getFirstInputValidationError(\n    inputValue,\n    formValidations[inputName]\n  )\n\n  setFormErrors((prevFormErrors: E) => ({\n    ...prevFormErrors,\n    [inputName]: error,\n  }))\n\n  return Boolean(error) === false\n}\n\nexport function resetInputValue<F>(\n  name: string,\n  setFormValues: Dispatch<SetStateAction<F>>,\n  initialFormValues: F\n): void {\n  const value = initialFormValues[name]\n\n  setFormValues((prevFormValues: F) => ({\n    ...prevFormValues,\n    [name]: value,\n  }))\n}\n\nexport function clearInputError<F>(\n  input:\n    | string\n    | ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>,\n  setFormErrors: Dispatch<SetStateAction<F>>\n): void {\n  const name = typeof input === 'string' ? input : input.target.name\n\n  setFormErrors((prevFormErrors: F) => ({\n    ...prevFormErrors,\n    [name]: undefined,\n  }))\n}\n\nexport function getInitialFormErrors<E>(formValidations: FormValidations): E {\n  const formInputNames = Object.keys(formValidations)\n  const initialFormErrors = {} as E\n\n  for (let a = 0; a < formInputNames.length; a++) {\n    initialFormErrors[formInputNames[a]] = undefined\n  }\n\n  return initialFormErrors\n}\n","import { useState, useMemo, ChangeEvent } from 'react'\nimport {\n  setInputValue,\n  resetInputValue,\n  clearInputError,\n  isFormValid,\n  isInputValid,\n  getInitialFormErrors,\n} from './logic'\nimport {\n  InputError,\n  FormValuesOutput,\n  FormErrorsOutput,\n  FormValidations,\n  InputValue,\n  FormValues,\n  FormErrors,\n} from './types'\n\n/**\n * Use this hook to manage your form values.\n *\n * ```ts\n * const {\n *   formValues,\n *   setInputValue\n * } = useFormValues({\n *   email: '',\n *   password: '',\n *   confirmPassword: ''\n * })\n * ```\n */\nexport function useFormValues<F extends FormValues>(\n  initialFormValues: F\n): FormValuesOutput<F> {\n  const [formValues, setFormValues] = useState<F>(initialFormValues)\n\n  return {\n    formValues,\n    resetFormValues: (): void => setFormValues(initialFormValues),\n    resetInputValue: (name: string): void =>\n      resetInputValue<F>(name, setFormValues, initialFormValues),\n    setInputValue: (\n      input:\n        | string\n        | ChangeEvent<\n            HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement\n          >,\n      value?: InputValue\n    ): void => setInputValue<F>(setFormValues, input, value),\n    setFormValues,\n  }\n}\n\n/**\n * Use this hook with `useFormValues` to manage your form errors.\n *\n * ```ts\n * const {\n *  formErrors,\n *  isFormValid,\n * } = useFormErrors({\n *  email: [required, email],\n *  password: [required, alphanumeric, (value) => minLength(value, 6)],\n *  confirmPassword: [\n *    required,\n *    (value) => passwordsMatch(value, formValues.password),\n *  ],\n * })\n * ```\n */\nexport function useFormErrors<F extends FormValues, E extends FormErrors>(\n  formValidations: FormValidations = {}\n): FormErrorsOutput<F, E> {\n  const initialFormErrors = useMemo<E>(\n    () => getInitialFormErrors(formValidations),\n    [formValidations]\n  )\n\n  const [formErrors, setFormErrors] = useState<E>(initialFormErrors)\n\n  return {\n    formErrors,\n    numberOfErrors: Object.values<InputError>(\n      formErrors\n    ).filter((error: InputError) => Boolean(error)).length,\n    isFormValid: (formValues: F): boolean =>\n      isFormValid<F, E>(formValues, setFormErrors, formValidations),\n    isInputValid: (\n      input:\n        | string\n        | ChangeEvent<\n            HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement\n          >,\n      value?: InputValue\n    ): boolean => isInputValid(setFormErrors, formValidations, input, value),\n    validateForm: (formValues: F): boolean =>\n      isFormValid<F, E>(formValues, setFormErrors, formValidations),\n    validateInputValue: (\n      input:\n        | string\n        | ChangeEvent<\n            HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement\n          >,\n      value?: InputValue\n    ): boolean => isInputValid(setFormErrors, formValidations, input, value),\n    clearFormErrors: (): void => setFormErrors(initialFormErrors),\n    clearInputError: (\n      input:\n        | string\n        | ChangeEvent<\n            HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement\n          >\n    ): void => clearInputError(input, setFormErrors),\n    setInputError: (name: string, error: InputError): void =>\n      setFormErrors((prevFormErrors: E) => ({\n        ...prevFormErrors,\n        [name]: error,\n      })),\n  }\n}\n","export function required(value) {\n  if (value === null || value === undefined || value === '') {\n    return 'This field is required.'\n  }\n}\n\nexport function email(value) {\n  const errorMessage = 'Please enter a valid email address.'\n  const lengthIsValid = value.length >= 1 && value.length <= 254\n\n  if (!lengthIsValid) {\n    return errorMessage\n  }\n\n  const looksLikeAnEmail = /^.+@.+\\..+$/.test(value)\n  if (!looksLikeAnEmail) {\n    return errorMessage\n  }\n}\n\nexport function minLength(value, min) {\n  if (value.length < min) {\n    return `Please use ${min} or more characters.`\n  }\n}\n\nexport function alphanumeric(value) {\n  if ((/[a-z]/.test(value) && /[0-9]/.test(value)) === false) {\n    return 'Please use letters and numbers.'\n  }\n}\n\nexport function equals(value1, value2, errorMessage) {\n  if (value1 !== value2) {\n    return errorMessage\n  }\n}\n","import React from 'react'\nimport { string, func, node } from 'prop-types'\n\nInputText.propTypes = {\n  name: string.isRequired,\n  label: string.isRequired,\n  type: string.isRequired,\n  value: string,\n  onChange: func.isRequired,\n  onBlur: func,\n  error: node,\n}\n\nexport default function InputText({\n  name,\n  label,\n  type,\n  value,\n  onChange,\n  onBlur,\n  error,\n}) {\n  return (\n    <div style={{ margin: '20px 0' }}>\n      <label htmlFor={name}>{label}</label>\n      <br />\n      <input\n        id={name}\n        data-testid={name}\n        name={name}\n        type={type}\n        value={value}\n        onChange={onChange}\n        onBlur={onBlur}\n      />\n      {error && (\n        <>\n          <br />\n          <div\n            data-testid={`${name}-error`}\n            style={{\n              color: 'red',\n              margin: '8px 0',\n              padding: 0,\n              listStyle: 'none',\n            }}\n          >\n            {error}\n          </div>\n        </>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport { string, func, arrayOf, shape, node } from 'prop-types'\n\nInputRadioGroup.propTypes = {\n  name: string.isRequired,\n  label: string.isRequired,\n  value: string,\n  onChange: func.isRequired,\n  options: arrayOf(\n    shape({ label: string.isRequired, value: string.isRequired })\n  ).isRequired,\n  error: node,\n}\n\nexport default function InputRadioGroup({\n  name,\n  label,\n  value,\n  onChange,\n  options,\n  error,\n}) {\n  return (\n    <div style={{ margin: '20px 0' }}>\n      <div style={{ marginBottom: '6px' }}>{label}</div>\n      <div style={{ marginLeft: '16px' }}>\n        {options.map((option) => {\n          return (\n            <span key={option.value} style={{ marginRight: '6px' }}>\n              <label htmlFor={`${name}-${option.value}`}>{option.label}</label>\n              <input\n                id={`${name}-${option.value}`}\n                name={name}\n                type=\"radio\"\n                value={option.value}\n                checked={option.value === value}\n                onChange={onChange}\n              />\n            </span>\n          )\n        })}\n      </div>\n      {error && (\n        <div\n          style={{\n            color: 'red',\n            margin: '8px 0',\n            padding: 0,\n            listStyle: 'none',\n          }}\n        >\n          {error}\n        </div>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport { useFormValues, useFormErrors } from '@jasperdunn/react-form-hooks'\nimport { required, email, minLength, alphanumeric, equals } from './validation'\nimport InputText from './InputText'\nimport InputRadioGroup from './InputRadioGroup'\n\nexport default function HooksForm() {\n  const {\n    formValues,\n    setInputValue,\n    resetFormValues,\n    resetInputValue,\n  } = useFormValues({\n    email: '',\n    password: '',\n    confirmPassword: '',\n    iLoveHooks: '',\n  })\n\n  const formValidations = {\n    email: [required, email],\n    password: [required, alphanumeric, (value) => minLength(value, 6)],\n    confirmPassword: [\n      required,\n      (value) => equals(value, formValues.password, \"Passwords don't match\"),\n    ],\n    iLoveHooks: [required],\n  }\n\n  const {\n    formErrors,\n    numberOfErrors,\n    validateForm,\n    validateInputValue,\n    clearFormErrors,\n    clearInputError,\n  } = useFormErrors(formValidations)\n\n  function updateAndValidateInput(event) {\n    setInputValue(event)\n    validateInputValue(event)\n  }\n\n  function resetForm() {\n    resetFormValues()\n    clearFormErrors()\n  }\n\n  function submitForm(event) {\n    event.preventDefault()\n\n    const formIsValid = validateForm(formValues)\n    if (formIsValid) {\n      signIn()\n    }\n  }\n\n  function signIn() {\n    //eslint-disable-next-line\n    alert('Validation successful!')\n  }\n\n  return (\n    <form onSubmit={submitForm} noValidate>\n      <h1>Form with hooks</h1>\n      {numberOfErrors > 0 && (\n        <small>\n          {numberOfErrors} field{numberOfErrors !== 1 && 's'} need\n          {numberOfErrors === 1 && 's'} your attention.\n        </small>\n      )}\n      <InputText\n        name=\"email\"\n        label=\"Email - (validate on blur)\"\n        type=\"email\"\n        value={formValues.email}\n        onChange={setInputValue}\n        onBlur={validateInputValue}\n        error={formErrors.email}\n      />\n      <InputText\n        name=\"password\"\n        label=\"Password - (clear errors on blur)\"\n        type=\"password\"\n        value={formValues.password}\n        onChange={setInputValue}\n        onBlur={clearInputError}\n        error={formErrors.password}\n      />\n      <InputText\n        name=\"confirmPassword\"\n        label=\"Confirm password\"\n        type=\"password\"\n        value={formValues.confirmPassword}\n        onChange={setInputValue}\n        error={formErrors.confirmPassword}\n      />\n      <InputRadioGroup\n        name=\"iLoveHooks\"\n        label=\"I love hooks!\"\n        value={formValues.iLoveHooks}\n        onChange={updateAndValidateInput}\n        options={[\n          { label: 'Yes', value: 'yes' },\n          { label: 'Yes', value: 'alsoYes' },\n        ]}\n        error={formErrors.iLoveHooks}\n      />\n      <button type=\"submit\">Create some hooks!</button>\n      <button type=\"button\" onClick={resetForm}>\n        Reset form\n      </button>\n      <button type=\"button\" onClick={() => resetInputValue('email')}>\n        Reset email\n      </button>\n      <button type=\"button\" onClick={() => clearInputError('email')}>\n        Clear email errors\n      </button>\n    </form>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport HooksForm from './HooksForm'\n\nfunction App() {\n  return <HooksForm />\n}\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(<App />, rootElement)\n"],"sourceRoot":""}